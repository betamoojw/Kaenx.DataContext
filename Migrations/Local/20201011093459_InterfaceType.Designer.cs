// <auto-generated />
using System;
using Kaenx.DataContext.Local;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kaenx.DataContext.Migrations.Local
{
    [DbContext(typeof(LocalContext))]
    [Migration("20201011093459_InterfaceType")]
    partial class InterfaceType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("Kaenx.DataContext.Local.LocalConnectionCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DbHostname")
                        .HasColumnType("TEXT");

                    b.Property<string>("DbName")
                        .HasColumnType("TEXT");

                    b.Property<string>("DbPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("DbUsername")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConnsCatalog");
                });

            modelBuilder.Entity("Kaenx.DataContext.Local.LocalConnectionProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DbHostname")
                        .HasColumnType("TEXT");

                    b.Property<string>("DbName")
                        .HasColumnType("TEXT");

                    b.Property<string>("DbPassword")
                        .HasColumnType("TEXT");

                    b.Property<string>("DbUsername")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ConnsProject");
                });

            modelBuilder.Entity("Kaenx.DataContext.Local.LocalInterface", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ip")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhAddr")
                        .HasColumnType("TEXT");

                    b.Property<int>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Interfaces");
                });

            modelBuilder.Entity("Kaenx.DataContext.Local.LocalProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConnectionId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsReconstruct")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProjectId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Thumbnail")
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
