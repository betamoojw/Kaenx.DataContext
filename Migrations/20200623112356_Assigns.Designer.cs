// <auto-generated />
using System;
using Kaenx.DataContext.Catalog;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kaenx.DataContext.Migrations
{
    [DbContext(typeof(CatalogContext))]
    [Migration("20200623112356_Assigns")]
    partial class Assigns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("Kaenx.DataContext.Catalog.AppAdditional", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<byte[]>("Assignments")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Bindings")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("ComsAll")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("ComsDefault")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Dynamic")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("LoadProcedures")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("ParameterAll")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("ParamsHelper")
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("AppAdditionals");
                });

            modelBuilder.Entity("Kaenx.DataContext.Catalog.AppComObject", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("ApplicationId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("BindedDefaultText")
                        .HasColumnType("TEXT");

                    b.Property<string>("BindedId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int>("Datapoint")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DatapointSub")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Flag_Communicate")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Flag_Read")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Flag_ReadOnInit")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Flag_Transmit")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Flag_Update")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Flag_Write")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FunctionText")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Group")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("AppComObjects");
                });

            modelBuilder.Entity("Kaenx.DataContext.Catalog.AppParameter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int>("Access")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Offset")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OffsetBit")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParameterTypeId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("SegmentId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("SegmentType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SuffixText")
                        .HasColumnType("TEXT")
                        .HasMaxLength(20);

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<bool>("UnionDefault")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AppParameters");
                });

            modelBuilder.Entity("Kaenx.DataContext.Catalog.AppParameterTypeEnumViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ParameterId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Text")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Value")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("AppParameterTypeEnums");
                });

            modelBuilder.Entity("Kaenx.DataContext.Catalog.AppParameterTypeViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tag1")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Tag2")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AppParameterTypes");
                });

            modelBuilder.Entity("Kaenx.DataContext.Catalog.AppSegmentViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int>("Address")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("LsmId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mask")
                        .HasColumnType("TEXT");

                    b.Property<int>("Offset")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("AppSegments");
                });

            modelBuilder.Entity("Kaenx.DataContext.Catalog.ApplicationViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<bool>("IsRelativeSegment")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LoadProcedure")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Manufacturer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mask")
                        .HasColumnType("TEXT")
                        .HasMaxLength(7);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Table_Assosiations")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<int>("Table_Assosiations_Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Table_Assosiations_Offset")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Table_Group")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<int>("Table_Group_Max")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Table_Group_Offset")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Table_Object")
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<int>("Table_Object_Offset")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("Kaenx.DataContext.Catalog.CatalogViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("ParentId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("Kaenx.DataContext.Catalog.DeviceViewModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<int>("BusCurrent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CatalogId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("HardwareId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<bool>("HasApplicationProgram")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasIndividualAddress")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCoupler")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsPowerSupply")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRailMounted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ManufacturerId")
                        .HasColumnType("TEXT")
                        .HasMaxLength(7);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("OrderNumber")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("VisibleDescription")
                        .HasColumnType("TEXT")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Kaenx.DataContext.Catalog.Hardware2AppModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasMaxLength(255);

                    b.Property<string>("ApplicationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("HardwareId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Hardware2App");
                });
#pragma warning restore 612, 618
        }
    }
}
